plugins {
    id 'java'
    id 'war'
    id 'application'
}

group = 'org.nhnnext'
version = '1.0'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0'  // 최신 jakarta.servlet API로 변경
    providedCompile 'javax.servlet:jstl:1.2'

    testImplementation 'junit:junit:4.11'

    implementation 'com.google.guava:guava:18.0'
    implementation 'com.h2database:h2:1.3.167'
    implementation 'org.apache.commons:commons-lang3:3.3.2'
    implementation 'org.apache.commons:commons-dbcp2:2.1.1'
    implementation "org.springframework:spring-jdbc:4.2.5.RELEASE"
    testImplementation "org.springframework:spring-test:4.2.5.RELEASE"
    implementation 'org.reflections:reflections:0.9.10'
    implementation 'ch.qos.logback:logback-classic:1.1.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.4.4'

    implementation "org.apache.tomcat.embed:tomcat-embed-core:9.0.65"
    implementation "org.apache.tomcat.embed:tomcat-embed-jasper:9.0.65"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

war {
    webAppDirName = 'webapp'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
        output.resourcesDir = file('webapp/WEB-INF/classes')
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
        output.resourcesDir = file('target/test-classes')
    }
}

mainClassName = 'next.Application'
